#!/usr/bin/env node
const fs = require("fs-extra");
const { resolve } = require("path");
const minimist = require("minimist");
const path = require("path");
// const pkg = process.env["npm_package_name"];
// const version = process.env["npm_package_version"];
// const tag = process.env["npm_config_tag"];
// const args = process.env["npm_config_argv"];
// const event = process.env["npm_lifecycle_event"];
// console.log("!!!! [handler ] --> ", event, pkg, version, tag, args);

const { handlers } = require("@pie-framework/build-helper");

const cliArgs = minimist(process.argv.slice(2));
const args = { ...process.env, ...cliArgs };

const filtered = Object.keys(args)
  .filter((k) => k.startsWith("npm_") || k.startsWith("JIRA_"))
  .reduce((acc, k) => {
    acc[k] = args[k];
    return acc;
  }, {});

// console.log("filtered: ", filtered);

const event = filtered.npm_lifecycle_event;

if (!filtered.JIRA_AUTH_TOKEN) {
  throw new Error("no jira auth token");
}

const run = async () => {
  if (event === "postpublish") {
    const result = await publishFixToJira(
      path.resolve(__dirname, ".."),
      {
        projectPrefixes: ["JAT"],
        host: "illuminate.atlassian.net",
        apiToken: filtered.JIRA_AUTH_TOKEN,
        email: filtered.JIRA_EMAIL,
        projectId: "JAT",
      },
      filtered
    );
    return result;
  }
};

/*
projectId: 13788,
released: true,
releaseDate: true,
releaseNameTemplate: "pie player v${version}",
jiraHost: "illuminate.atlassian.net",
ticketPrefixes: ["PD"]
*/

run()
  .then(() => console.log("done"))
  .catch((e) => console.error(e));
// if (event === "postpublish") {

//   const pkg = fs.readJsonSync(
//     resolve(__dirname, "../packages/foo/package.json")
//   );
//   console.log("pkg.version:", pkg.version);
// }
